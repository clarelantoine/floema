html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
  display: block;
}

body {
  line-height: 1;
}

ol, ul {
  list-style: none;
}

blockquote, q {
  quotes: none;
}

blockquote:before, blockquote:after,
q:before, q:after {
  content: "";
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.home__link__icon, .home__gallery, .home, .detail__button__icon, .detail__media__image, .detail, .collections__content, .collections__gallery__media__image, .collection__gallery, .collections__wrapper, .collections, .section__highlight__media__img, .about__gallery__media__image, .section__content__media__img, .preloader, .navigation {
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}

.home, .detail, .preloader {
  align-items: center;
  display: flex;
  justify-content: center;
}

.dg.ac {
  z-index: 99999 !important;
}

.navigation__list__link {
  font-family: "George X";
  font-size: 2rem;
}
@media (max-width: 767px) {
  .navigation__list__link {
    font-size: 4.8rem;
  }
}

.detail__information__link {
  font-family: "George X";
  font-size: 3rem;
}
@media (max-width: 767px) {
  .detail__information__link {
    font-size: 5.2rem;
  }
}

.preloader__text span span {
  font-family: "George X";
  font-size: 5.3rem;
  line-height: 1;
}

.collections__article__title {
  font-family: "George X";
  font-size: 6rem;
}
@media (max-width: 767px) {
  .collections__article__title {
    font-size: 12rem;
  }
}

.about__title {
  font-family: "George X";
  font-size: 10rem;
  line-height: 1;
}
@media (max-width: 767px) {
  .about__title {
    font-size: 12rem;
  }
}

.detail__information__title {
  font-family: "George X";
  font-size: 12rem;
  line-height: 0.82;
}
@media (max-width: 767px) {
  .detail__information__title {
    font-size: 18rem;
  }
}

.about__highlight__title, .home__titles__title, .collections__titles__title {
  font-family: "George X";
  font-size: 20rem;
}

.detail__information__item__title, .detail__information__collection, .about__highlight__label, .about__content__label, .home__titles__label, .collections__titles__label {
  font-size: 1.2rem;
  letter-spacing: 0.1rem;
}
@media (max-width: 767px) {
  .detail__information__item__title, .detail__information__collection, .about__highlight__label, .about__content__label, .home__titles__label, .collections__titles__label {
    font-size: 3rem;
  }
}

.home__link, .detail__button, .preloader__number {
  font-size: 1.4rem;
}
@media (max-width: 767px) {
  .home__link, .detail__button, .preloader__number {
    font-size: 3rem;
  }
}

.detail__information__item__description, .detail__information__highlight__text, body {
  font-size: 1.6rem;
  font-weight: 300;
  line-height: 1.5;
}
@media (max-width: 767px) {
  .detail__information__item__description, .detail__information__highlight__text, body {
    font-size: 2.8rem;
  }
}

.home__titles, .collections__titles {
  align-items: center;
  display: flex;
  left: 50%;
  position: absolute;
  transform: translate(-50%, -50%) rotate(-90deg);
  top: 50%;
  text-align: center;
}

.home__titles__label, .collections__titles__label {
  margin: 0 3rem;
  text-transform: uppercase;
  transform: rotate(90deg);
}

.home__titles__title, .collections__titles__title {
  padding-top: 2rem;
}

@font-face {
  font-family: "George X";
  src: url(c55a3e4b29d04f918b85203cc20bb3c6.woff2) format("woff2"), url(85034eaca9bf4874023e7b986c45af82.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(4df6111f672a39a72cb669437457da9d.woff2) format("woff2"), url(db2739c9369fdd944a9bc0dce88414ee.woff) format("woff");
  font-weight: normal;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(136751ea64b2a6cc29dd89665dac3fdc.woff2) format("woff2"), url(ce59a7709dad6d7ae5b0a87418c7fc75.woff) format("woff");
  font-weight: 300;
  font-style: normal;
  font-display: swap;
}
@font-face {
  font-family: "Suisse BP";
  src: url(ebec5e6195d3f06d86950daa4361b025.woff2) format("woff2"), url(3b61f9904dab5a5a7102bcff4eaac1fc.woff) format("woff");
  font-weight: 200;
  font-style: normal;
  font-display: swap;
}
*,
*:after,
*:before {
  box-sizing: border-box;
}

* {
  color: inherit;
  outline: none;
  text-decoration: none;
}

html {
  font-size: calc(100vw / 1920 * 10);
  line-height: 1;
}
@media (max-width: 767px) {
  html {
    font-size: calc(100vw / 750 * 10);
  }
}

body {
  font-family: "Suisse BP";
}

img {
  vertical-align: middle;
}

button {
  background: none;
  border: none;
  color: inherit;
  cursor: pointer;
  outline: none;
}

.navigation {
  color: #F9F1E7;
  position: fixed;
  pointer-events: none;
  z-index: 2;
}

.navigation__link {
  font-size: 0;
  height: 2rem;
  left: 4rem;
  pointer-events: auto;
  position: absolute;
  top: 4rem;
  width: 12.8rem;
}
@media (max-width: 767px) {
  .navigation__link {
    height: 4.3rem;
    left: 5rem;
    top: 5rem;
    width: 27.9rem;
  }
}

.navigation__link__icon {
  display: block;
}

.navigation__list__item {
  position: absolute;
  pointer-events: auto;
  right: 4rem;
  top: 4rem;
}

.preloader {
  background: #C97164;
  color: #F9F1E7;
  text-align: center;
  z-index: 3;
}

.preloader__text {
  font-size: 0;
  max-width: 66rem;
}
.preloader__text span {
  display: inline-block;
  overflow: hidden;
}
.preloader__number {
  bottom: 7.3rem;
  left: 50%;
  overflow: hidden;
  position: absolute;
  transform: translateX(-50%);
}

.preloader__number__text {
  display: inline-block;
}

.about {
  background: #B2B8C3;
  color: #37384C;
  opacity: 0;
}

.about__title {
  margin: auto;
  max-width: 124rem;
  text-align: center;
}
@media (max-width: 767px) {
  .about__title {
    max-width: 67.7rem;
  }
}

.about__content {
  display: flex;
  justify-content: center;
  margin: 20rem auto;
  position: relative;
}
.about__content:first-child {
  margin-top: 0;
}
.about__content:last-child {
  margin-bottom: 0;
}
.about__content:nth-child(5) {
  justify-content: flex-end;
}
.about__content:nth-child(8) {
  justify-content: flex-start;
}
@media (max-width: 767px) {
  .about__content:nth-child(5) {
    justify-content: center;
  }
  .about__content:nth-child(8) {
    justify-content: center;
  }
}

.about__content__wrapper {
  display: flex;
}
.about__content--right .about__content__wrapper {
  flex-direction: row-reverse;
}
@media (max-width: 767px) {
  .about__content--right .about__content__wrapper {
    flex-direction: column-reverse;
  }
}
@media (max-width: 767px) {
  .about__content:nth-child(3) .about__content__wrapper {
    flex-direction: column-reverse;
  }
  .about__content:nth-child(5) .about__content__wrapper {
    flex-direction: column;
  }
  .about__content:nth-child(9) .about__content__wrapper {
    flex-direction: column-reverse;
  }
}

.about__content__box {
  display: flex;
}
@media (max-width: 767px) {
  .about__content__box {
    margin: auto;
    width: 60.9rem;
  }
  .about__content:nth-child(3) .about__content__box {
    margin-top: 10rem;
  }
  .about__content:nth-child(5) .about__content__box {
    margin-bottom: 10rem;
  }
  .about__content--right .about__content__box {
    margin-top: 10rem;
  }
  .about__content:nth-child(9) .about__content__box {
    margin-top: 20rem;
  }
}

.about__content__label {
  text-transform: uppercase;
  width: 18rem;
}
@media (max-width: 767px) {
  .about__content__label {
    font-size: 2.4rem;
    padding-right: 3.5rem;
    width: 15rem;
    word-break: break-word;
  }
}

.about__content__description {
  width: 36.2rem;
}
.about__content__description p:not(:first-child) {
  margin-top: 3.5rem;
}
@media (max-width: 767px) {
  .about__content__description {
    width: calc(100% - 15rem);
  }
}

.about__content:nth-child(3) .about__content__media {
  height: 80.8rem;
  margin-left: 18rem;
  position: relative;
  width: 53.8rem;
}
@media (max-width: 767px) {
  .about__content:nth-child(3) .about__content__media {
    height: 91.4rem;
    margin-left: 0;
    width: 60.9rem;
  }
}
.about__content:nth-child(5) .about__content__media {
  height: 59.9rem;
  margin-left: 18rem;
  position: relative;
  width: 96rem;
}
@media (max-width: 767px) {
  .about__content:nth-child(5) .about__content__media {
    height: 50rem;
    margin-left: 0;
    width: 100vw;
  }
}
.about__content--right .about__content__media {
  height: 52rem;
  margin-right: 12rem;
  position: relative;
  width: 84.2rem;
}
@media (max-width: 767px) {
  .about__content--right .about__content__media {
    height: 52rem;
    margin-right: 0;
    width: 100vw;
  }
}
.about__content:nth-child(9) .about__content__media {
  height: 85.8rem;
  margin-left: 38.2rem;
  position: relative;
  width: 60.8rem;
}
@media (max-width: 767px) {
  .about__content:nth-child(9) .about__content__media {
    height: 85.8;
    margin-left: 0;
    width: 60.9rem;
  }
}

.section__content__media__img {
  object-fit: cover;
}

.about__gallery {
  height: 58.6rem;
  margin: 20rem 0;
  overflow: hidden;
  position: relative;
}
.about__gallery:first-child {
  margin-top: 0;
}
.about__gallery:last-child {
  margin-bottom: 0;
}

.about__gallery__wrapper {
  align-items: center;
  display: flex;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.about__gallery__media {
  height: 43.7rem;
  margin: 0 4rem;
  position: relative;
  width: 30.9rem;
}

.about__gallery__media__image {
  object-fit: cover;
}

.about__highlight {
  margin: 20rem 0;
  position: relative;
}
.about__highlight:first-child {
  margin-top: 0;
}
.about__highlight:last-child {
  margin-bottom: 0;
}
@media (max-width: 767px) {
  .about__highlight:last-child {
    padding-bottom: 20rem;
  }
}

.about__highlight__wrapper {
  height: 104rem;
  margin: auto;
  position: relative;
  width: 144rem;
}
.about__highlight:nth-child(4) .about__highlight__wrapper {
  width: 90.3rem;
}
@media (max-width: 767px) {
  .about__highlight:nth-child(4) .about__highlight__wrapper {
    height: 119.3rem;
    width: 100%;
  }
  .about__highlight:last-child .about__highlight__wrapper {
    height: 316.2rem;
    width: 100%;
  }
}

.about__highlight__label {
  left: 50%;
  position: absolute;
  top: 9rem;
  transform: translateX(-50%);
  text-align: center;
  text-transform: uppercase;
  width: 9.6rem;
}
@media (max-width: 767px) {
  .about__highlight__label {
    font-size: 2.4rem;
    margin-top: 6.5rem;
    top: 91rem;
    width: 19rem;
  }
  .about__highlight:last-child .about__highlight__label {
    margin-top: 6.5rem;
  }
}

.about__highlight__title {
  left: 50%;
  padding-bottom: 2rem;
  position: absolute;
  top: 50%;
  transform: translate(-50%, -50%) rotate(-90deg);
}
@media (max-width: 767px) {
  .about__highlight__title {
    font-size: 30rem;
  }
  .about__highlight:last-child .about__highlight__title {
    margin-top: 6.5rem;
  }
}

.about__highlight__media {
  height: 76rem;
  position: absolute;
  width: 54rem;
}
.about__highlight:nth-child(4) .about__highlight__media {
  height: 52.8rem;
  width: 36rem;
}
.about__highlight__media:first-child {
  left: 0;
  top: 0;
}
.about__highlight__media:last-child {
  right: 0;
  bottom: 0;
}
@media (max-width: 767px) {
  .about__highlight:last-child .about__highlight__media {
    height: 76rem;
    width: 54rem;
  }
  .about__highlight:last-child .about__highlight__media:first-child {
    left: 50%;
    top: 0;
    transform: translateX(-50%);
  }
  .about__highlight:last-child .about__highlight__media:last-child {
    right: 50%;
    bottom: 0;
    transform: translateX(50%);
  }
}

.section__highlight__media__img {
  object-fit: cover;
}

.collections {
  background: #BC978C;
  color: #F9F1E7;
}

.collections__wrapper {
  overflow: hidden;
}

@media (max-width: 767px) {
  .collections__titles {
    display: none;
  }
}

.collection__gallery__wrapper {
  display: flex;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.collections__gallery__link {
  display: block;
  margin: 0 5.3rem;
}

.collections__gallery__media {
  height: 63.1rem;
  position: relative;
  width: 44.7rem;
}

.collections__gallery__media__image {
  object-fit: cover;
}

@media (max-width: 767px) {
  .collections__content {
    display: none;
  }
}

.collections__article {
  bottom: 8.7rem;
  left: 8rem;
  opacity: 0;
  position: absolute;
}
.collections__article--active {
  opacity: 1;
}

.collections__article__description {
  max-width: 44rem;
}
@media (max-width: 767px) {
  .collections__article__description {
    display: none;
  }
}

.collections__mobile {
  display: flex;
  position: absolute;
  bottom: 5rem;
}
@media (min-width: 769px) {
  .collections__mobile {
    display: none;
  }
}

.collections__mobile__item {
  padding-left: 5rem;
  width: 100vw;
}

.collections__mobile__item__label {
  font-size: 2rem;
  letter-spacing: 0.1rem;
  text-transform: uppercase;
}

.collections__mobile__item__title {
  font-family: "George X";
  font-size: 12rem;
}

.detail {
  background: #BC978C;
  color: #F9F1E7;
}
@media (max-width: 767px) {
  .detail {
    height: auto;
  }
}

.detail__wrapper {
  align-items: center;
  display: flex;
}
@media (max-width: 767px) {
  .detail__wrapper {
    display: block;
    margin: auto;
    padding: 15rem 0 31.5rem 0;
    width: 66.1rem;
  }
}

.detail__media {
  height: 78.2rem;
  position: relative;
  width: 55.4rem;
}
@media (max-width: 767px) {
  .detail__media {
    height: 93.4rem;
    margin: 0 auto 7.3rem auto;
    width: 100%;
  }
}

.detail__media__image {
  object-fit: cover;
}

.detail__information {
  padding-left: 8.2rem;
}
@media (max-width: 767px) {
  .detail__information {
    padding-left: 0;
  }
}

.detail__information__collection {
  margin-bottom: 4rem;
  text-transform: uppercase;
}

.detail__information__title {
  max-width: 60rem;
}

.detail__information__content {
  padding-left: 18rem;
}
@media (max-width: 767px) {
  .detail__information__content {
    padding-left: 0;
  }
}

.detail__information__highlights {
  margin-top: 6rem;
}

.detail__information__highlight {
  align-items: center;
  display: flex;
}
.detail__information__highlight:not(:first-child) {
  margin-top: 4rem;
}

.detail__information__highlight__icon {
  height: 4rem;
  margin-right: 4rem;
  width: 4rem;
}
@media (max-width: 767px) {
  .detail__information__highlight__icon {
    height: 9.2rem;
    margin-right: 5.8rem;
    width: 9.2rem;
  }
}

.detail__information__highlight__text {
  letter-spacing: 0.03rem;
}

.detail__information__list {
  margin-top: 4rem;
}

.detail__information__item {
  display: flex;
}
.detail__information__item:not(:first-child) {
  margin-top: 4rem;
}

.detail__information__item__title {
  padding-right: 2.5rem;
  width: 10rem;
}
@media (max-width: 767px) {
  .detail__information__item__title {
    font-size: 2.8rem;
    padding-right: 5rem;
    width: 15rem;
  }
}

.detail__information__item__description {
  max-width: 44rem;
}

.detail__information__link {
  display: inline-block;
  margin-top: 3rem;
}

.detail__button {
  align-items: center;
  bottom: 5rem;
  display: flex;
  height: 6rem;
  justify-content: center;
  left: 50%;
  letter-spacing: 0.05rem;
  position: absolute;
  text-transform: uppercase;
  transform: translateX(-50%);
  width: 12.4rem;
  z-index: 2;
}
@media (max-width: 767px) {
  .detail__button {
    bottom: 12rem;
    height: 13rem;
    width: 26.8rem;
  }
}

.home {
  background: #C97164;
  color: #F9F1E7;
  overflow: hidden;
  text-align: center;
}
.home:before, .home:after {
  height: 24rem;
  left: 0;
  position: absolute;
  width: 100%;
  content: "";
  z-index: 1;
}
.home:before {
  background: linear-gradient(to bottom, #C97164 0%, rgba(201, 113, 100, 0) 100%);
  top: 0;
}
.home:after {
  background: linear-gradient(to top, #C97164 0%, rgba(201, 113, 100, 0) 100%);
  bottom: 0;
}

.home__gallery {
  visibility: hidden;
}

.home__gallery__media {
  position: absolute;
}

.home__link {
  align-items: center;
  bottom: 5rem;
  display: flex;
  height: 6rem;
  justify-content: center;
  left: 50%;
  letter-spacing: 0.05rem;
  position: absolute;
  text-transform: uppercase;
  transform: translateX(-50%);
  width: 28.8rem;
  z-index: 2;
}
@media (max-width: 767px) {
  .home__link {
    bottom: 7.4rem;
    width: 55rem;
    height: 13.7rem;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64,*/